{
    "openapi": "3.1.0",
    "info": {
        "title": "New DEV",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:81",
            "description": "local"
        }
    ],
    "paths": {
        "/api/auth/reset-password": {
            "post": {
                "operationId": "auth.changePassword",
                "summary": "Change password using a reset token",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password/verify-token": {
            "post": {
                "operationId": "auth.verifyPasswordResetToken",
                "summary": "Verify a password reset token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyPasswordResetTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean"
                                        },
                                        "creating_password": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "content",
                                        "creating_password"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/reset-password/request": {
            "post": {
                "operationId": "auth.requestChangePassword",
                "summary": "Request a password reset",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "operationId": "auth.register",
                "summary": "Register a new user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "operationId": "auth.login",
                "summary": "Login a user with email and password",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "ID of the user the tokens are assigned to"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "description": "Access token"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "description": "Refresh token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "description": "Token type",
                                            "enum": [
                                                "Bearer"
                                            ]
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "description": "Time in seconds for how long the access token is valid for",
                                            "enum": [
                                                3600
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "access_token",
                                        "refresh_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string",
                                            "description": "Message indicating that invalid login credentials such as email, password, etc. were provided.",
                                            "enum": [
                                                "invalid_credentials"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/OAuthAccountPasswordLoginException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/auth/refresh": {
            "post": {
                "operationId": "auth.refreshToken",
                "summary": "Refresh access token using refresh token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "refresh_token": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "refresh_token"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "enum": [
                                                "Bearer"
                                            ]
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "enum": [
                                                3600
                                            ]
                                        }
                                    },
                                    "required": [
                                        "access_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/revoke-refresh": {
            "post": {
                "operationId": "auth.revokeRefreshToken",
                "summary": "Revoke a specific refresh token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "refresh_token": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "refresh_token"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "operationId": "auth.logout",
                "summary": "Logout the authenticated user",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/api/auth/{driver}/callback": {
            "post": {
                "operationId": "auth.callback",
                "summary": "Process OAuth callback",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "required": true,
                        "description": "The OAuth driver",
                        "schema": {
                            "$ref": "#/components/schemas/OAuthDrivers"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuthCallbackRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "ID of the user the tokens are assigned to"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "description": "Access token"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "description": "Refresh token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "description": "Token type",
                                            "enum": [
                                                "Bearer"
                                            ]
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "description": "Time in seconds for how long the access token is valid for",
                                            "enum": [
                                                3600
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "access_token",
                                        "refresh_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnsupportedDriver"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/{driver}": {
            "get": {
                "operationId": "auth.oauth",
                "summary": "Get OAuth redirect URL",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "required": true,
                        "description": "The OAuth driver",
                        "schema": {
                            "$ref": "#/components/schemas/OAuthDrivers"
                        }
                    },
                    {
                        "name": "integration_id",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string",
                                            "description": "Target URL for OAuth login"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnsupportedDriver"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/{driver}/revoke": {
            "post": {
                "operationId": "auth.revokeOAuth",
                "summary": "Revoke OAuth access for the authenticated user",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "required": true,
                        "description": "The OAuth driver",
                        "schema": {
                            "$ref": "#/components/schemas/OAuthDrivers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/api/auth/2fa/prepare": {
            "get": {
                "operationId": "auth.prepareTwoFactor",
                "summary": "Prepare 2FA Authentication (for the setup first only)",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "qr_code": {
                                            "type": "string",
                                            "description": "QR Code for two-factor authentication"
                                        },
                                        "uri": {
                                            "type": "string",
                                            "description": "URI for two-factor authentication"
                                        }
                                    },
                                    "required": [
                                        "qr_code",
                                        "uri"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/api/auth/2fa/confirm": {
            "post": {
                "operationId": "auth.confirmTwoFactor",
                "summary": "Confirm and enable 2FA Authentication (after setup first only)",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "code"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "recovery_codes": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "recovery_codes"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/auth/2fa/disable": {
            "post": {
                "operationId": "auth.disableTwoFactorAuth",
                "summary": "Disable two-factor authentication for the authenticated user",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/api/auth/2fa/recovery-codes": {
            "get": {
                "operationId": "auth.getRecoveryCodes",
                "summary": "Retrieve recovery codes for the authenticated user",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "recovery_codes": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "recovery_codes"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/sanctum/csrf-cookie": {
            "get": {
                "operationId": "sanctum.csrf-cookie",
                "summary": "Return an empty response simply to trigger the storage of the CSRF cookie in the browser",
                "tags": [
                    "CsrfCookie"
                ],
                "responses": {
                    "204": {
                        "description": "No content\n\nNo content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "operationId": "user.index",
                "summary": "Get the authenticated user's profile",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "`UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "user.update",
                "summary": "Update the authenticated user's profile settings",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfileSettingsUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "user.destroy",
                "summary": "Delete the authenticated user's account",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/api/user/{userId}": {
            "get": {
                "operationId": "show",
                "summary": "Get a user's public profile",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/export-data": {
            "get": {
                "operationId": "user.exportUserData",
                "summary": "Request a data export for the authenticated user",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/api/user/{userId}/export-data/download": {
            "get": {
                "operationId": "user.downloadExportedData",
                "summary": "Download exported data for a user",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/{userId}/export-data/status": {
            "get": {
                "operationId": "user.checkExportDataStatus",
                "summary": "Check the status of a user data export",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "valid_until": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "valid_until"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "valid_until": {
                                                    "type": "null"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "valid_until"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/notifications": {
            "put": {
                "operationId": "user.updateNotifications",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/api/user/verify-email": {
            "post": {
                "operationId": "user.sendVerificationEmail",
                "summary": "Send a verification email to the authenticated user",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/api/user/verify-email/{token}": {
            "post": {
                "operationId": "user.verifyEmail",
                "summary": "Verify a user's email using a verification token",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "The verification token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "boolean",
                                            "description": "Boolean indicating whether the operation was successful or not",
                                            "examples": [
                                                true
                                            ]
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/api/user/activity/login": {
            "post": {
                "operationId": "userLoginActivity.index",
                "summary": "Get login activity for the authenticated user with pagination",
                "tags": [
                    "UserLoginActivity"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserActivityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "description": "Data returned to the requested page"
                                        },
                                        "total": {
                                            "type": "string",
                                            "description": "Total number of entries across all pages"
                                        },
                                        "current_page": {
                                            "type": "string",
                                            "description": "Number of page the data is from"
                                        },
                                        "per_page": {
                                            "type": "string",
                                            "description": "Number of items per page"
                                        },
                                        "total_pages": {
                                            "type": "string",
                                            "description": "Number of all pages available"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "total",
                                        "current_page",
                                        "per_page",
                                        "total_pages"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ChangePasswordRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email for the account to reset password for. Password-reset email link will be sent ot this email"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "ChangePasswordRequest"
            },
            "GitHubUserDataResource": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string"
                    },
                    "gravatar_id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "html_url": {
                        "type": "string"
                    },
                    "followers_url": {
                        "type": "string"
                    },
                    "following_url": {
                        "type": "string"
                    },
                    "gists_url": {
                        "type": "string"
                    },
                    "starred_url": {
                        "type": "string"
                    },
                    "subscriptions_url": {
                        "type": "string"
                    },
                    "organizations_url": {
                        "type": "string"
                    },
                    "repos_url": {
                        "type": "string"
                    },
                    "events_url": {
                        "type": "string"
                    },
                    "received_events_url": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "user_view_type": {
                        "type": "string"
                    },
                    "site_admin": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "blog": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "hireable": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "twitter_username": {
                        "type": "string"
                    },
                    "notification_email": {
                        "type": "string"
                    },
                    "public_repos": {
                        "type": "string"
                    },
                    "public_gists": {
                        "type": "string"
                    },
                    "followers": {
                        "type": "string"
                    },
                    "following": {
                        "type": "string"
                    }
                },
                "required": [
                    "login",
                    "avatar_url",
                    "gravatar_id",
                    "url",
                    "html_url",
                    "followers_url",
                    "following_url",
                    "gists_url",
                    "starred_url",
                    "subscriptions_url",
                    "organizations_url",
                    "repos_url",
                    "events_url",
                    "received_events_url",
                    "type",
                    "user_view_type",
                    "site_admin",
                    "name",
                    "company",
                    "blog",
                    "location",
                    "email",
                    "hireable",
                    "bio",
                    "twitter_username",
                    "notification_email",
                    "public_repos",
                    "public_gists",
                    "followers",
                    "following"
                ],
                "title": "GitHubUserDataResource"
            },
            "GoogleUserDataResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "nickname",
                    "avatar_url"
                ],
                "title": "GoogleUserDataResource"
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "ip_address": {
                        "type": "string"
                    },
                    "two_factor_code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "email",
                    "password",
                    "ip_address"
                ],
                "title": "LoginRequest"
            },
            "NotificationsUpdateRequest": {
                "type": "object",
                "properties": {
                    "email_marketing": {
                        "type": "boolean"
                    },
                    "email_notifications": {
                        "type": "boolean"
                    },
                    "email_security_alerts": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "email_marketing",
                    "email_notifications",
                    "email_security_alerts"
                ],
                "title": "NotificationsUpdateRequest"
            },
            "OAuthCallbackRequest": {
                "type": "object",
                "properties": {
                    "ip_address": {
                        "type": "string"
                    }
                },
                "required": [
                    "ip_address"
                ],
                "title": "OAuthCallbackRequest"
            },
            "OAuthDrivers": {
                "type": "string",
                "enum": [
                    "google",
                    "google-one-tap",
                    "github"
                ],
                "title": "OAuthDrivers"
            },
            "ProfileSettingsUpdateRequest": {
                "type": "object",
                "properties": {
                    "avatar_source": {
                        "type": "string"
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "language": {
                        "type": "string"
                    },
                    "theme": {
                        "type": "string"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "notifications": {
                        "type": "object",
                        "properties": {
                            "email_notifications": {
                                "type": "boolean"
                            },
                            "email_marketing": {
                                "type": "boolean"
                            },
                            "email_security_alerts": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "email_notifications",
                            "email_marketing",
                            "email_security_alerts"
                        ]
                    }
                },
                "required": [
                    "avatar_source",
                    "is_public",
                    "language",
                    "theme",
                    "notifications"
                ],
                "title": "ProfileSettingsUpdateRequest"
            },
            "RegisterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "title": "RegisterRequest"
            },
            "UserActivityRequest": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "number"
                    },
                    "per_page": {
                        "type": "number"
                    }
                },
                "required": [
                    "page",
                    "per_page"
                ],
                "title": "UserActivityRequest"
            },
            "UserProfileSettingsResource": {
                "type": "object",
                "properties": {
                    "theme": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "avatar_source": {
                        "type": "string"
                    },
                    "is_public": {
                        "type": "string"
                    },
                    "notifications": {
                        "type": "object",
                        "properties": {
                            "email_notifications": {
                                "type": "string"
                            },
                            "email_marketing": {
                                "type": "string"
                            },
                            "email_security_alerts": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "email_notifications",
                            "email_marketing",
                            "email_security_alerts"
                        ]
                    }
                },
                "required": [
                    "theme",
                    "language",
                    "timezone",
                    "avatar_source",
                    "is_public",
                    "notifications"
                ],
                "title": "UserProfileSettingsResource"
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "email_verified_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "google": {
                        "$ref": "#/components/schemas/GoogleUserDataResource"
                    },
                    "github": {
                        "$ref": "#/components/schemas/GitHubUserDataResource"
                    },
                    "profile_settings": {
                        "$ref": "#/components/schemas/UserProfileSettingsResource"
                    },
                    "has_password": {
                        "type": "boolean"
                    },
                    "has_two_factor_enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "email_verified_at",
                    "created_at",
                    "updated_at",
                    "has_password",
                    "has_two_factor_enabled"
                ],
                "title": "UserResource"
            },
            "VerifyPasswordResetTokenRequest": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Token to be sent for verification"
                    }
                },
                "required": [
                    "token"
                ],
                "title": "VerifyPasswordResetTokenRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "OAuthAccountPasswordLoginException": {
                "description": "OAuth Authentication exception",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "UnsupportedDriver": {
                "description": "Unsupported OAuth Driver exception",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}